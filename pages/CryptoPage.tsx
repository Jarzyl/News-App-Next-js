import { useEffect, useState } from "react";
import axios from "axios";
import Head from "next/head";
import CoinItem from '@/components/Crypto/CryptoItem';
import NavBar from "@/components/Layout/Navbars/NavBar";
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

interface Coin {
  id: string;
  name: string;
  image: string;
  symbol: string;
  current_price: number;
  price_change_percentage_24h: number;
  total_volume: number;
  market_cap: number;
  market_cap_rank: number;
};

const CoinList: React.FC = () => {
  const [coins, setCoins] = useState<Coin[]>([]);

  useEffect(() => {
    const fetchCryptoData = async () => {
      try {
        const response = await axios.get(
          "https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=15&page=1&sparkline=false"
        );
        setCoins(response.data);
      } catch (error) {
        console.error("An error occurred while downloading data", error);
        toast.error(
          <div className="flex justify-center">
            <span className="text-red-500">An error occurred while downloading data</span>
          </div>,
          {
            position: 'top-center',
            autoClose: 1500,
            hideProgressBar: true,
            closeOnClick: true,
            pauseOnHover: true,
            draggable: true,
            progress: undefined,
          }
        );
      };
    };
    fetchCryptoData();
  }, []);  

  return (
    <>
    <Head>
    <title>News App | Crypto </title>
    <meta name="description" content="Generated by create next app" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/png" href="coin.png" />
    </Head>
    <NavBar/>
    <div className="mx-auto mt-16 md:mt-20 text-black">
      <h1 className="text-lg md:text-3xl mb-30 text-center">Follow cryptocurrency quotes - the latest market data!</h1>
      <h2 className="text-lg md:text-3xl mt-6 mb-6 lg:mb-12 text-center">Top 15 Cryptocurrencies by Market Cap</h2>
      <div className="grid md:grid-cols-2 xl:grid-cols-3 gap-4 items-center justify-center md:ml-24 md:mr-24 lg:ml-36 lg:mr-36 mb-10">
        {coins.map((coin) => (<CoinItem key={coin.name} coin={coin}/>))};
      </div>
    </div>
    </>
  );
};

export default CoinList;